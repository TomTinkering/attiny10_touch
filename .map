Archive member included because of file (symbol)

/opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_exit.o)
                              /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o (exit)
/opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_copy_data.o)
                              build/main.o (__do_copy_data)
/opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_clear_bss.o)
                              build/main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

tx_nr_sent          0x1               build/main.o
rx_state            0x1               build/main.o
tx_state            0x1               build/main.o
cur_tx_pos          0x1               build/main.o
rx                  0x4               build/main.o
tx_out              0x1               build/main.o
cur_meas            0x2               build/main.o
sample_state        0x1               build/main.o
rx_nr_recv          0x1               build/main.o
tx                  0x4               build/main.o
cur_rx              0x1               build/main.o
cur_rx_pos          0x1               build/main.o
bit_nr              0x1               build/main.o
cur_tx              0x1               build/main.o
rx_in               0x1               build/main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000001000 xr
data             0x0000000000800040 0x0000000000000100 rw !x
config           0x0000000000820000 0x0000000000000002 rw !x
lock             0x0000000000830000 0x0000000000000002 rw !x
signature        0x0000000000840000 0x0000000000000004 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
LOAD build/main.o
LOAD /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a
LOAD /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/libc.a
LOAD /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x160
 *(.vectors)
 .vectors       0x0000000000000000       0x16 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000016                . = ALIGN (0x2)
                0x0000000000000016                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000016        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000016                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000016                __ctors_start = .
 *(.ctors)
                0x0000000000000016                __ctors_end = .
                0x0000000000000016                __dtors_start = .
 *(.dtors)
                0x0000000000000016                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000016        0x0 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
                0x0000000000000016                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000016        0xc /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000022       0x16 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_copy_data.o)
                0x0000000000000022                __do_copy_data
 .init4         0x0000000000000038       0x10 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_clear_bss.o)
                0x0000000000000038                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000048        0x4 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
 *(.init9)
 *(.text)
 .text          0x000000000000004c        0x2 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
                0x000000000000004c                __bad_interrupt
                0x000000000000004c                __vector_3
                0x000000000000004c                __vector_7
                0x000000000000004c                __vector_4
                0x000000000000004c                __vector_9
                0x000000000000004c                __vector_2
                0x000000000000004c                __vector_8
                0x000000000000004c                __vector_10
 .text          0x000000000000004e       0x90 build/main.o
                0x000000000000004e                init
                0x0000000000000068                __vector_1
                0x000000000000008c                __vector_6
                0x00000000000000a4                __vector_5
 .text          0x00000000000000de        0x0 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_exit.o)
 .text          0x00000000000000de        0x0 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_copy_data.o)
 .text          0x00000000000000de        0x0 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_clear_bss.o)
                0x00000000000000de                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000000de       0x7e build/main.o
                0x00000000000000de                main
 .text.libgcc   0x000000000000015c        0x0 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000015c        0x0 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000015c        0x0 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_clear_bss.o)
                0x000000000000015c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000015c        0x0 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_exit.o)
                0x000000000000015c                exit
                0x000000000000015c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000015c        0x4 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000160                _etext = .

.data           0x0000000000800040        0x0 load address 0x0000000000000160
                0x0000000000800040                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800040        0x0 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
 .data          0x0000000000800040        0x0 build/main.o
 .data          0x0000000000800040        0x0 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_exit.o)
 .data          0x0000000000800040        0x0 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_copy_data.o)
 .data          0x0000000000800040        0x0 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800040                . = ALIGN (0x2)
                0x0000000000800040                _edata = .
                0x0000000000800040                PROVIDE (__data_end, .)

.bss            0x0000000000800040       0x16
                0x0000000000800040                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800040        0x0 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
 .bss           0x0000000000800040        0x0 build/main.o
 .bss           0x0000000000800040        0x0 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_exit.o)
 .bss           0x0000000000800040        0x0 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_copy_data.o)
 .bss           0x0000000000800040        0x0 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800040       0x16 build/main.o
                0x0000000000800040                tx_nr_sent
                0x0000000000800041                rx_state
                0x0000000000800042                tx_state
                0x0000000000800043                cur_tx_pos
                0x0000000000800044                rx
                0x0000000000800048                tx_out
                0x0000000000800049                cur_meas
                0x000000000080004b                sample_state
                0x000000000080004c                rx_nr_recv
                0x000000000080004d                tx
                0x0000000000800051                cur_rx
                0x0000000000800052                cur_rx_pos
                0x0000000000800053                bit_nr
                0x0000000000800054                cur_tx
                0x0000000000800055                rx_in
                0x0000000000800056                PROVIDE (__bss_end, .)
                0x0000000000000160                __data_load_start = LOADADDR (.data)
                0x0000000000000160                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800056        0x0
                0x0000000000800056                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800056                PROVIDE (__noinit_end, .)
                0x0000000000800056                _end = .
                0x0000000000800056                PROVIDE (__heap_start, .)

.lock
 *(.lock*)

.signature
 *(.signature*)

.config
 *(.config*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o

.stabstr        0x0000000000000000       0x85
 *(.stabstr)
 .stabstr       0x0000000000000000       0x85 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x28
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 build/main.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x2fc
 *(.debug_info)
 .debug_info    0x0000000000000000      0x2fc build/main.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x108
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x108 build/main.o

.debug_line     0x0000000000000000       0xd7
 *(.debug_line)
 .debug_line    0x0000000000000000       0xd7 build/main.o

.debug_frame    0x0000000000000000       0xa0
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0xa0 build/main.o

.debug_str      0x0000000000000000      0x15b
 *(.debug_str)
 .debug_str     0x0000000000000000      0x15b build/main.o
                                        0x18f (size before relaxing)

.debug_loc      0x0000000000000000       0xc1
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0xc1 build/main.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(build/bin/attiny10_touch.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x0000000000000000       0x18
 .debug_ranges  0x0000000000000000       0x18 build/main.o

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
__bss_end                                         /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_clear_bss.o)
__bss_start                                       /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_clear_bss.o)
__data_end                                        /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_copy_data.o)
__data_load_start                                 /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_copy_data.o)
__data_start                                      /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_copy_data.o)
__do_clear_bss                                    /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_clear_bss.o)
                                                  build/main.o
__do_copy_data                                    /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_copy_data.o)
                                                  build/main.o
__heap_end                                        /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
__init                                            /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
__stack                                           /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
__vector_1                                        build/main.o
                                                  /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
__vector_10                                       /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
__vector_2                                        /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
__vector_3                                        /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
__vector_4                                        /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
__vector_5                                        build/main.o
                                                  /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
__vector_6                                        build/main.o
                                                  /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
__vector_7                                        /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
__vector_8                                        /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
__vector_9                                        /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
__vector_default                                  /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
__vectors                                         /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
_exit                                             /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_exit.o)
bit_nr                                            build/main.o
cur_meas                                          build/main.o
cur_rx                                            build/main.o
cur_rx_pos                                        build/main.o
cur_tx                                            build/main.o
cur_tx_pos                                        build/main.o
exit                                              /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/avrtiny10/libgcc.a(_exit.o)
                                                  /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
init                                              build/main.o
main                                              build/main.o
                                                  /opt/cross/avr/bin/../lib/gcc/avr/4.6.2/../../../../avr/lib/avrtiny10/crttn10.o
rx                                                build/main.o
rx_in                                             build/main.o
rx_nr_recv                                        build/main.o
rx_state                                          build/main.o
sample_state                                      build/main.o
tx                                                build/main.o
tx_nr_sent                                        build/main.o
tx_out                                            build/main.o
tx_state                                          build/main.o
